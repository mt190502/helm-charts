---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-main"
  namespace: "{{ if eq .Release.Namespace "default" }}radicale-k8s{{ else }}{{ .Release.Namespace }}{{ end }}"
spec:
  replicas: {{ .Values.replicaCount | default (printf "%d" 1) }}
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-main"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-main"
    spec:
    {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
    {{- end }}
      initContainers:
        - name: "{{ .Release.Name }}-init"
          image: {{ template "radicale.main.image" . }}
          command:
            - /bin/sh
            - -c
            - |
              if [ -f /app/data/users ]; then
                echo "User file already exists, skipping user initialization"
                exit 0
              fi
              apk add apache2-utils
              {{- if .Values.secret.settings.enabled }}
              htpasswd -b -c /app/data/users $(cat /app/secret/{{ .Values.secret.settings.usernameKey }}) $(cat /app/secret/{{ .Values.secret.settings.passwordKey }})
              {{- else }}
              htpasswd -b -c /app/data/users {{ .Values.secret.options.username }} {{ .Values.secret.options.password }}
              {{- end }}
          volumeMounts:
            - name: "{{ .Release.Name }}-data"
              mountPath: /app/data
            - name: "{{ .Release.Name }}-config"
              mountPath: /app/config
             {{- if .Values.secret.settings.enabled }}
            - name: {{ if .Values.secret.settings.name }}{{ .Values.secret.settings.name }}{{ else }}{{ .Release.Name }}-main{{ end }}
              mountPath: /app/secret
             {{- end }}
      containers:
        - name: "{{ .Release.Name }}-main"
          image: {{ template "radicale.main.image" . }}
          command:
            - /bin/sh
            - -c
            - |
              /venv/bin/radicale --config $(ls /app/config | sed 's|^|/app/config/|' | paste -sd ":" -)
          {{- if .Values.main.environments }}
          env:
          {{- range .Values.main.environments }}
            - name: {{ .name }}
              value: {{ .value | quote }}
          {{- end }}
          {{- end }}
          {{- with .Values.main.ports }}
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources.limits.main }}
          resources:
            limits:
              {{- toYaml . | nindent 14 }}
          {{- end }}
          volumeMounts:
            - name: "{{ .Release.Name }}-data"
              mountPath: /app/data
            - name: "{{ .Release.Name }}-config"
              mountPath: /app/config
            - name: "{{ .Release.Name }}-ssl"
              mountPath: /app/ssl
             {{- if .Values.secret.settings.enabled }}
            - name: {{ if .Values.secret.settings.name }}{{ .Values.secret.settings.name }}{{ else }}{{ .Release.Name }}-main{{ end }}
              mountPath: /app/secret
             {{- end }}
      volumes:
        - name: "{{ .Release.Name }}-data"
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-data-pvc"
        - name: "{{ .Release.Name }}-config"
          configMap:
            name: "{{ .Release.Name }}-config"
          {{- if .Values.secret.settings.enabled }}
        - name: {{ if .Values.secret.settings.name }}{{ .Values.secret.settings.name }}{{ else }}{{ .Release.Name }}-main{{ end }}
          secret:
            secretName: {{ if .Values.secret.settings.name }}{{ .Values.secret.settings.name }}{{ else }}{{ .Release.Name }}-main{{ end }}
          {{- end }}
        - name: "{{ .Release.Name }}-ssl"
          secret:
            secretName: "{{ .Values.main.tls.secretName }}"