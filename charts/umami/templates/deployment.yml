---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-web"
  namespace: "{{ if eq .Release.Namespace "default" }}umami-k8s{{ else }}{{ .Release.Namespace }}{{ end }}"
spec:
  replicas: {{ .Values.replicaCount | default (printf "%d" 1) }}
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-web"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-web"
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: "{{ .Release.Name }}-web-init"
          image: busybox
          command:
            - sh
            - -c
            - |
            {{- if and (eq .Values.global.postgres.internal.enabled true) (eq .Values.global.postgres.selected true) }}
              until nc -z -v -w30 {{ .Release.Name }}-postgres 5432
            {{- else if and (eq .Values.global.postgres.external.enabled true) (eq .Values.global.postgres.selected true) }}
              until nc -z -v -w30 {{ .Values.global.postgres.external.host }} {{ .Values.global.postgres.external.port }}
            {{- else if and (eq .Values.global.mysql.internal.enabled true) (eq .Values.global.mysql.selected true) }}
              until nc -z -v -w30 {{ .Release.Name }}-mysql 3306
            {{- else if and (eq .Values.global.mysql.external.enabled true) (eq .Values.global.mysql.selected true) }}
              until nc -z -v -w30 {{ .Values.global.mysql.external.host }} {{ .Values.global.mysql.external.port }}
            {{- end }}
              do
                echo "Waiting for the database to be ready..."
                sleep 5
              done
      containers:
        - name: "{{ .Release.Name }}-web"
          image: {{ template "umami.web.image" . }}
          env:
          {{- if eq .Values.global.postgres.selected true }}
            {{- if or (eq (.Values.global.postgres.secret.autoCreate | toString) "kustomize") (eq (.Values.global.postgres.secret.autoCreate | toString) "true") }}
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.global.postgres.secret.name }}{{ .Values.global.postgres.secret.name }}{{ else }}{{ .Release.Name }}-postgres{{ end }}
                  key: {{ .Values.global.postgres.secret.usernameKey | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.global.postgres.secret.name }}{{ .Values.global.postgres.secret.name }}{{ else }}{{ .Release.Name }}-postgres{{ end }}
                  key: {{ .Values.global.postgres.secret.passwordKey | quote }}
            - name: POSTGRES_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.global.postgres.secret.name }}{{ .Values.global.postgres.secret.name }}{{ else }}{{ .Release.Name }}-postgres{{ end }}
                  key: {{ .Values.global.postgres.secret.databaseKey | quote }}
            - name: POSTGRES_HOST
              {{- if eq .Values.global.postgres.internal.enabled true }}
              value: {{ .Release.Name }}-postgres
              {{- else }}
              value: {{ .Values.global.postgres.external.host }}
              {{- end }}
            - name: POSTGRES_PORT
              {{- if eq .Values.global.postgres.internal.enabled true }}
              value: "5432"
              {{- else }}
              value: {{ .Values.global.postgres.external.port | quote }}
              {{- end }}
            {{- end }}
          {{- else }}
            {{- if or (eq (.Values.global.mysql.secret.autoCreate | toString) "kustomize") (eq (.Values.global.mysql.secret.autoCreate | toString) "true") }}
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.global.mysql.secret.name }}{{ .Values.global.mysql.secret.name }}{{ else }}{{ .Release.Name }}-mysql{{ end }}
                  key: {{ .Values.global.mysql.secret.databaseKey | quote }}
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.global.mysql.secret.name }}{{ .Values.global.mysql.secret.name }}{{ else }}{{ .Release.Name }}-mysql{{ end }}
                  key: {{ .Values.global.mysql.secret.usernameKey | quote }}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.global.mysql.secret.name }}{{ .Values.global.mysql.secret.name }}{{ else }}{{ .Release.Name }}-mysql{{ end }}
                  key: {{ .Values.global.mysql.secret.passwordKey | quote }}
            - name: MYSQL_HOST
              {{- if eq .Values.global.mysql.internal.enabled true }}
              value: {{ .Release.Name }}-mysql
              {{- else }}
              value: {{ .Values.global.mysql.external.host }}
              {{- end }}
            - name: MYSQL_PORT
              {{- if eq .Values.global.mysql.internal.enabled true }}
              value: "3306"
              {{- else }}
              value: {{ .Values.global.mysql.external.port | quote }}
              {{- end }}
              {{- end }}
            {{- end }}
            - name: DATABASE_TYPE
              value: {{ if eq .Values.global.mysql.selected true }}mysql{{ else }}postgresql{{ end }}
            - name: DATABASE_URL
            {{- if eq .Values.global.postgres.selected true }}
              value: {{ template "postgres.credentials" . }}
            {{- else }}
              value: {{ template "mysql.credentials" . }}
            {{- end }}
            - name: APP_SECRET
            {{- if .Values.global.web.appSecret.enabled }}
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.global.web.appSecret.name }}{{ .Values.global.web.appSecret.name }}{{ else }}{{ .Release.Name }}-web{{ end }}
                  key: {{ .Values.global.web.appSecret.key | quote }}
            {{- else }}
              value: {{ .Values.global.web.options.umami_app_secret | quote }}
            {{- end }}
          {{- range .Values.global.web.environments }}
            - name: {{ .name }}
              value: {{ .value | quote }}
          {{- end }}
          {{- with .Values.global.web.ports }}
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources.limits.web }}
          resources:
            limits:
              {{- toYaml . | nindent 14 }}
          {{- end }}

{{ if and .Values.global.postgres.internal.enabled .Values.global.postgres.selected }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-postgres"
  namespace: "{{ if eq .Release.Namespace "default" }}umami-k8s{{ else }}{{ .Release.Namespace }}{{ end }}"
spec:
  replicas: {{ .Values.replicaCount | default (printf "%d" 1) }}
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-postgres"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-postgres"
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{-  with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: "{{ .Release.Name }}-postgres-init"
          image: busybox
          command:
            - sh
            - -c
            - |
              [ -d "/mnt/lost+found" ] && rm -rf /mnt/lost+found
              exit 0
          volumeMounts:
            - name: "{{ .Release.Name }}-postgres-data"
              mountPath: /mnt
      containers:
        - name: "{{ .Release.Name }}-postgres"
          image: {{ template "umami.postgres.image" . }}
          env:
            - name: POSTGRES_DB
            {{- if .Values.global.postgres.secret.enabled }}
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.global.postgres.secret.name }}{{ .Values.global.postgres.secret.name }}{{ else }}{{ .Release.Name }}-postgres{{ end }}
                  key: {{ .Values.global.postgres.secret.databaseKey | quote }}
            {{- else }}
              value: {{ .Values.global.postgres.options.database | quote }}
            {{- end }}
            - name: POSTGRES_USER
            {{- if .Values.global.postgres.secret.enabled }}
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.global.postgres.secret.name }}{{ .Values.global.postgres.secret.name }}{{ else }}{{ .Release.Name }}-postgres{{ end }}
                  key: {{ .Values.global.postgres.secret.usernameKey | quote }}
            {{- else }}
              value: {{ .Values.global.postgres.options.username | quote }}
            {{- end }}
            - name: POSTGRES_PASSWORD
            {{- if .Values.global.postgres.secret.enabled }}
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.global.postgres.secret.name }}{{ .Values.global.postgres.secret.name }}{{ else }}{{ .Release.Name }}-postgres{{ end }}
                  key: {{ .Values.global.postgres.secret.passwordKey | quote }}
            {{- else }}
              value: {{ .Values.global.postgres.options.password | quote }}
            {{- end }}
            {{- range .Values.global.postgres.environments }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: "{{ .Release.Name }}-postgres-data"
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: "{{ .Release.Name }}-postgres-data"
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-postgres-pvc"
{{- end }}

{{ if and .Values.global.mysql.internal.enabled .Values.global.mysql.selected}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-mysql"
  namespace: "{{ if eq .Release.Namespace "default" }}umami-k8s{{ else }}{{ .Release.Namespace }}{{ end }}"
spec:
  replicas: {{ .Values.replicaCount | default (printf "%d" 1) }}
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-mysql"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-mysql"
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{-  with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: "{{ .Release.Name }}-mysql-init"
          image: busybox
          command:
            - sh
            - -c
            - |
              [ -d "/mnt/lost+found" ] && rm -rf /mnt/lost+found
              exit 0
          volumeMounts:
            - name: "{{ .Release.Name }}-mysql-data"
              mountPath: /mnt
      containers:
        - name: "{{ .Release.Name }}-mysql"
          image: {{ template "umami.mysql.image" . }}
          env:
            - name: {{ if eq .Values.image.mysql.repository "mariadb"}}MARIADB{{ else }}MYSQL{{ end }}_DATABASE
            {{- if .Values.global.mysql.secret.enabled }}
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.global.mysql.secret.name }}{{ .Values.global.mysql.secret.name }}{{ else }}{{ .Release.Name }}-mysql{{ end }}
                  key: {{ .Values.global.mysql.secret.databaseKey | quote }}
            {{- else }}
              value: {{ .Values.global.mysql.options.database | quote }}
            {{- end }}
            - name: {{ if eq .Values.image.mysql.repository "mariadb"}}MARIADB{{ else }}MYSQL{{ end }}_USER
            {{- if .Values.global.mysql.secret.enabled }}
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.global.mysql.secret.name }}{{ .Values.global.mysql.secret.name }}{{ else }}{{ .Release.Name }}-mysql{{ end }}
                  key: {{ .Values.global.mysql.secret.usernameKey | quote }}
            {{- else }}
              value: {{ .Values.global.mysql.options.username | quote }}
            {{- end }}
            - name: {{ if eq .Values.image.mysql.repository "mariadb"}}MARIADB{{ else }}MYSQL{{ end }}_PASSWORD
            {{- if .Values.global.mysql.secret.enabled }}
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.global.mysql.secret.name }}{{ .Values.global.mysql.secret.name }}{{ else }}{{ .Release.Name }}-mysql{{ end }}
                  key: {{ .Values.global.mysql.secret.passwordKey | quote }}
            {{- else }}
              value: {{ .Values.global.mysql.options.password | quote }}
            {{- end }}
            - name: {{ if eq .Values.image.mysql.repository "mariadb"}}MARIADB{{ else }}MYSQL{{ end }}_ROOT_PASSWORD
            {{- if .Values.global.mysql.secret.enabled }}
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.global.mysql.secret.name }}{{ .Values.global.mysql.secret.name }}{{ else }}{{ .Release.Name }}-mysql{{ end }}
                  key: {{ .Values.global.mysql.secret.rootPasswordKey | quote }}
            {{- else }}
              value: {{ .Values.global.mysql.options.rootPasswordKey | quote }}
            {{- end }}
            {{- range .Values.global.mysql.environments }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: "{{ .Release.Name }}-mysql-data"
              mountPath: /var/lib/mysql
      volumes:
        - name: "{{ .Release.Name }}-mysql-data"
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-mysql-pvc"
{{- end }}