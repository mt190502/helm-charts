---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-main"
  namespace: "{{ if eq .Release.Namespace "default" }}anki-server-k8s{{ else }}{{ .Release.Namespace }}{{ end }}"
spec:
  replicas: {{ .Values.replicaCount | default (printf "%d" 1) }}
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-main"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-main"
    spec:
    {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: "{{ .Release.Name }}-main"
          image: {{ template "anki-server.main.image" . }}
          env:
          {{- range .Values.main.accounts }}
            - name: {{ .key | quote }}
              {{- if .secret.enabled }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secret.name | quote }}
                  key: {{ .secret.key | quote }}
              {{- else }}
              value: "{{ .name }}:{{ .password }}"
              {{- end }}
          {{- end }}
          {{- range .Values.main.environments }}
            - name: {{ .name }}
              value: {{ .value | quote }}
          {{- end }}
          {{- with .Values.main.ports }}
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources.limits.main }}
          resources:
            limits:
              {{- toYaml . | nindent 14 }}
          {{- end }}
          volumeMounts:
            - name: "{{ .Release.Name }}-data"
              mountPath: /anki_data
      volumes:
        - name: "{{ .Release.Name }}-data"
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-data-pvc"