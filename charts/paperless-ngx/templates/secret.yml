{{- if and .Values.global.postgres.secret.enabled (eq (.Values.global.postgres.secret.autoCreate | toString) "true") }}
---
apiVersion: v1
kind: Secret
metadata:
  name: "{{ .Release.Name }}-postgres"
  namespace: "{{ if eq .Release.Namespace "default" }}paperless-ngx-k8s{{ else }}{{ .Release.Namespace }}{{ end }}"
type: Opaque
data:
  {{- $credentials := split " " (include "postgres.credentials" (dict "Release" .Release "Values" .Values "raw" true)) }}
  {{ .Values.global.postgres.secret.usernameKey }}: "{{ $credentials._0 | b64enc }}"
  {{ .Values.global.postgres.secret.passwordKey }}: "{{ $credentials._1 | b64enc }}"
  {{ .Values.global.postgres.secret.databaseKey }}: "{{ $credentials._2 | b64enc }}"
{{- end }}