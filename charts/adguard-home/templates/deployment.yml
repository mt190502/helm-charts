---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-web"
  namespace: "{{ if eq .Release.Namespace "default" }}adguard-home-k8s{{ else }}{{ .Release.Namespace }}{{ end }}"
spec:
  replicas: {{ .Values.replicaCount | default (printf "%d" 1) }}
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-web"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-web"
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{-  with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: "{{ .Release.Name }}-web-tls-loader"
          image: mikefarah/yq:latest
          securityContext:
            runAsUser: 0
          command: 
            - sh
            - -c
            - |
              if [ "${TLS_IS_ENABLED}" != "true" ]; then
                echo "TLS is not enabled, skipping TLS certificate loading"
                exit 0
              elif [ ! -f /opt/adguardhome/conf/AdGuardHome.yaml ]; then
                echo "AdGuardHome is not initialized, skipping TLS certificate loading"
                exit 0
              fi
              yq eval  '.tls.private_key_path = "/opt/adguardhome/tls/tls.key" | 
                        .tls.certificate_path = "/opt/adguardhome/tls/tls.crt" |
                        .tls.enabled = true |
                        .tls.server_name = "{{ .Values.global.web.tls.serverName }}" |
                        .tls.force_https = true' /opt/adguardhome/conf/AdGuardHome.yaml > /tmp/AdGuardHome.yaml.new \
                        && mv /tmp/AdGuardHome.yaml.new /opt/adguardhome/conf/AdGuardHome.yaml
          env:
            - name: TLS_IS_ENABLED
              value: {{ .Values.global.web.tls.enabled | quote }} 
          volumeMounts:
            - name: "{{ .Release.Name }}-data"
              mountPath: /opt/adguardhome/work
              subPath: work
            - name: "{{ .Release.Name }}-data"
              mountPath: /opt/adguardhome/conf
              subPath: conf
            - name: "{{ .Release.Name }}-tls"
              mountPath: /opt/adguardhome/tls      
      containers:
        - name: "{{ .Release.Name }}-web"
          image: {{ template "adguard-home.web.image" . }}
          {{- if .Values.global.web.enviroments }}
          env:
          {{- range .Values.global.web.environments }}
            - name: {{ .name }}
              value: {{ .value | quote }}
          {{- end }}
          {{- end }}
          {{- with .Values.global.web.ports }}
          ports:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources.limits.web }}
          resources:
            limits:
              {{- toYaml . | nindent 14 }}
          {{- end }}
          volumeMounts:
            - name: "{{ .Release.Name }}-data"
              mountPath: /opt/adguardhome/work
              subPath: work
            - name: "{{ .Release.Name }}-data"
              mountPath: /opt/adguardhome/conf
              subPath: conf
            - name: "{{ .Release.Name }}-tls"
              mountPath: /opt/adguardhome/tls
      volumes:
        - name: "{{ .Release.Name }}-data"
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-data-pvc"
        - name: "{{ .Release.Name }}-tls"
          secret:
            secretName: "{{ .Values.global.web.tls.secretName }}"